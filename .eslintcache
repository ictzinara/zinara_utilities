[{"C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\index.js":"1","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Tollgate.js":"2","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\CardItem.js":"3","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Vehicle.js":"4","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\MapContainer.js":"5","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Home.js":"6","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Footer.js":"7"},{"size":266,"mtime":1625141256779,"results":"8","hashOfConfig":"9"},{"size":13657,"mtime":1625145066626,"results":"10","hashOfConfig":"9"},{"size":670,"mtime":1625141256512,"results":"11","hashOfConfig":"9"},{"size":4505,"mtime":1625145050698,"results":"12","hashOfConfig":"9"},{"size":2032,"mtime":1625144957947,"results":"13","hashOfConfig":"9"},{"size":288,"mtime":1625141256521,"results":"14","hashOfConfig":"9"},{"size":1865,"mtime":1625141256516,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7y5cb2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\index.js",[],"C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Tollgate.js",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"import React from 'react';\r\nimport '../../App.css';\r\nimport Cards from '../Cards';\r\nimport HeroSection from '../HeroSection';\r\nimport Footer from '../Footer';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input,Form, FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport { Jumbotron, Button,Container,Row ,Col} from 'reactstrap';\r\nimport { ListGroup, ListGroupItem ,Badge } from 'reactstrap';\r\nimport { Table } from 'reactstrap';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport MapContainer from './MapContainer';\r\n//import { FaMapMarkedAlt,FaMapSigns,FaMapMarked ,FaCar } from 'react-icons/fa';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '80%',\r\n};\r\nclass Tollgate extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.apiGetTarrif = this.apiGetTarrif.bind(this);\r\n    this.apiGetCity =  this.apiGetCity.bind(this);\r\n      this.state = {\r\n        Route: [],\r\n        Tollgates: [],\r\n        Tarrifs: [],\r\n        Cities: [],\r\n          tollgates: null,\r\n          amount: null,\r\n         VClass: '',\r\n         From: '',\r\n         Via: '',\r\n         To: '',\r\n         errormessage: '',\r\n         vehicle_class: '',\r\n            rtgs: '',\r\n            usd: '',\r\n            pula: '',\r\n            rand: '',\r\n      };\r\n   }\r\n   \r\n   handleChange(event) {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val});\r\n  }\r\n\r\ncomponentDidMount() {// Changing the state after 2 sec\r\n    // from the time when the component\r\n    // is rendered\r\n    setTimeout(() => {\r\n      this.setState({ color: 'white' });\r\n    }, 2000);\r\n    this.apiGetTarrif();\r\n    this.apiGetCity();\r\n    this.apiGetTollgates();\r\n    \r\n  }\r\napiGetTollgates(){\r\n      fetch(\"http://41.60.204.194:8082/api/tollgates\")\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n        \r\n        console.log(result);\r\n         if(result.length > 0){\r\n           \r\n            this.setState({\r\n              Tollgates: result\r\n            })\r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n  displayMarkers = () => {\r\n    return this.state.Route.map((toll, index) => {\r\n      return <Marker key={index} id={index} label={\"\"+ toll.name} position={{\r\n       lat: -toll.lat,\r\n       lng: toll.long\r\n     }}\r\n     onClick={() => console.log(\"You clicked me!\")} />\r\n    })\r\n  }\r\n// http://41.60.204.194:8082/api/tarrif\r\napiGetTarrif(){\r\n      fetch(\"http://41.60.204.194:8082/api/tarrif\")\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n        \r\n        console.log(result);\r\n         if(result.length > 0){\r\n           \r\n            this.setState({\r\n              Tarrifs: result\r\n            })\r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n// http://41.60.204.194:8082/api/cities\r\napiGetCity(){\r\n      fetch(\"http://41.60.204.194:8082/api/cities\")\r\n      .then(response => response.json())\r\n      .then((result) =>{ \r\n        \r\n        console.log(result);\r\n         if(result.length > 0){\r\n           \r\n            this.setState({\r\n              Cities: result\r\n            }) \r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\napiGetToll(amount){\r\n      let Departure = this.state.From;\r\n      let Detour = this.state.Via;\r\n      let Destination = this.state.To;\r\n\r\n      fetch(\"http://41.60.204.194:8082/api/tollquerys/\" + Departure )\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n         if(result.length > 0){\r\n            for(let i= 0; i < result.length ; i++){\r\n              if(result[i].city_via === Detour){\r\n                 if(result[i].city_to === Destination){\r\n                  console.log(result[i]);\r\n                  let dt = result[i].city_via;\r\n                  this.updateData(result[i].number_of_tollgates ,dt ,amount);\r\n                 }\r\n                 else{\r\n                 console.log('No Valid Destination');\r\n                 this.apiGetRevToll(amount);\r\n               }\r\n              }\r\n              else{\r\n                 console.log('No Detour');\r\n                 if(result[i].city_to === Destination){\r\n                  console.log(result[i]);\r\n                  let dt = result[i].city_via;\r\n                  this.updateData(result[i].number_of_tollgates ,dt ,amount);\r\n                 }\r\n                 else{\r\n                 this.apiGetRevToll(amount);\r\n                 }\r\n              }\r\n            }\r\n            \r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n  apiGetRevToll(amount){\r\n      let Departure = this.state.From;\r\n      let Detour = this.state.Via;\r\n      let Destination = this.state.To;\r\n\r\n      fetch(\"http://41.60.204.194:8082/api/tollquerys/\" + Departure )\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n         if(result.length > 0){\r\n            for(let i= 0; i < result.length ; i++){\r\n              if(result[i].city_via === Detour){\r\n                 if(result[i].city_to === Destination){\r\n                  console.log(result[i]);\r\n                  let dt = result[i].city_via;\r\n                  this.updateData(result[i].number_of_tollgates ,dt ,amount);\r\n                 }\r\n                 else{\r\n                 console.log('No Valid Destination');\r\n               }\r\n              }\r\n              else{\r\n                 console.log('No Detour');\r\n                 if(result[i].city_to === Destination){\r\n                  console.log(result[i]);\r\n                  let dt = result[i].city_via;\r\n                  this.updateData(result[i].number_of_tollgates ,dt ,amount);\r\n                 }\r\n              }\r\n            }\r\n            \r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n   handleSubmit(event){\r\n      let amount= null;\r\n      let tollgates= null;\r\n      this.handleData();\r\n      event.preventDefault();\r\n   }\r\n  handleData() {\r\n      let amount= null;\r\n      let vehicle_class= null;\r\n          let  rtgs= null;\r\n           let usd= null\r\n           let pula= null;\r\n           let rand= null;\r\n      let tollgates= null;\r\n      let tr = this.state.Tarrifs;\r\n      for(let i = 0 ;i < tr.length; i++)\r\n     {\r\n        if(this.state.VClass === tr[i].vehicle_class) {\r\n            vehicle_class= tr[i].vehicle_class;\r\n            amount= tr[i].rtgs;\r\n            usd= tr[i].usd;\r\n            pula= tr[i].pula;\r\n            rand= tr[i].rand;\r\n            this.updateCost(amount);\r\n            this.setState({\r\n              rtgs:tr[i].rtgs,\r\n              usd:tr[i].usd,\r\n              pula:tr[i].pula,\r\n              rand: tr[i].rand,\r\n            })\r\n            \r\n        } else {\r\n            console.log('Error');\r\n        }\r\n     }\r\n      \r\n  }\r\n  updateCost(amount){\r\n      this.apiGetToll(amount);\r\n  }\r\n  updateData(tollgates ,detour, amount){\r\n    let Route = []\r\n    for(let i = 0 ; i < this.state.Tollgates.length ; i++){\r\n      let toll = this.state.Tollgates[i];\r\n      \r\n      if(toll.city == this.state.From){\r\n        Route.push(toll);\r\n        console.log('Route toll');\r\n        console.log(toll);\r\n      } \r\n       if(toll.city = this.state.To){\r\n        Route.push(toll);\r\n        console.log('Route toll');\r\n        console.log(toll);\r\n       }\r\n    }\r\n    \r\n\r\n     let total = amount * tollgates;\r\n                this.setState({\r\n                  Route : Route,\r\n                amount: amount,\r\n                tollgates: tollgates,\r\n                total: total,\r\n                detour: detour,\r\n            });\r\n            \r\n  }\r\n   myChangeHandler = (event) => {\r\n      let nam = event.target.name;\r\n      let val = event.target.value;\r\n      let err = '';\r\n      if (nam === \"id\") {\r\n         if (val !==\"\" && !Number(val)) {\r\n            err = <strong>Your id must be a number</strong>;\r\n         }\r\n      }\r\n      this.setState({errormessage: err});\r\n      this.setState({[nam]: val});\r\n   }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Jumbotron fluid>\r\n        <HeroSection/>\r\n          <Container fluid>\r\n         <form onSubmit={this.handleSubmit}>\r\n        <Container>\r\n        <Row>\r\n          <Col>Define a route to calculate the tolling Fee</Col>\r\n        </Row>\r\n        <hr/>\r\n        <Row>\r\n          \r\n          <Col>Departure</Col>\r\n          <Col>Via Route</Col>\r\n          <Col>Destination</Col>\r\n          <Col>Vehicle Type</Col>\r\n          <Col></Col>\r\n        </Row>\r\n\r\n        <Row>\r\n        \r\n          <Col><InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>From</InputGroupText>\r\n          </InputGroupAddon>\r\n        <Input type=\"select\" name=\"From\" id=\"From\" value={this.state.From} onChange={this.handleChange}>\r\n          <option></option>\r\n            {this.state.Cities.map((city, index) => {\r\n                  return <option>{city.city}</option>;\r\n                })}\r\n          </Input>\r\n        </InputGroup></Col>\r\n          <Col><InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>Via</InputGroupText>\r\n          </InputGroupAddon>\r\n           <Input type=\"select\" name=\"Via\" id=\"Via\" value={this.state.Via} onChange={this.handleChange}>\r\n          \r\n             {this.state.Cities.map((city, index) => {\r\n                  return <option>{city.city}</option>;\r\n                })}\r\n          </Input>\r\n        </InputGroup></Col>\r\n          <Col><InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>To</InputGroupText>\r\n          </InputGroupAddon>\r\n        <Input type=\"select\" name=\"To\" id=\"To\" value={this.state.To} onChange={this.handleChange}>\r\n            \r\n             {this.state.Cities.map((city, index) => {\r\n                  return <option>{city.city}</option>;\r\n                })}\r\n          </Input>\r\n        </InputGroup></Col>\r\n        <Col>\r\n           <div>\r\n           \r\n            <FormGroup>\r\n               <Input type=\"select\" name=\"VClass\" id=\"VClass\" value={this.state.VClass} onChange={this.handleChange}>\r\n                  <option></option>\r\n                  <option>Light Motor Vehicles</option>\r\n                  <option>Minibuses</option>\r\n                  <option>Buses</option>\r\n                  <option>Heavy Vehicles</option>\r\n                  <option>Haulage Trucks</option>\r\n               </Input>\r\n            </FormGroup>\r\n           </div>\r\n        </Col>\r\n        <Col>\r\n         <input className=\"btn btn-success btn-sm\" type=\"submit\" value=\"Calculate Route\" />\r\n        </Col>\r\n        </Row>\r\n        <hr/>\r\n        <Row>\r\n          <Col xs=\"3\"></Col>\r\n          <Col xs=\"auto\"></Col>\r\n          <Col xs=\"3\"></Col>\r\n        </Row>\r\n      </Container>\r\n       </form>\r\n            </Container>\r\n        </Jumbotron>\r\n         <Map\r\n              google={this.props.google}\r\n              zoom={8}\r\n              style={mapStyles}\r\n              initialCenter={{ lat: -17.8277, lng: 31.0534}}\r\n            >\r\n              {this.displayMarkers()}\r\n            </Map>\r\n        \r\n         <div className=\"container\">\r\n       <hr/>\r\n          <Row>\r\n            <Col sm=\"3\">\r\n            \r\n            <Card>\r\n            \r\n              <CardBody>\r\n              <Label >Your Route</Label>\r\n              <hr/>\r\n                <Input value={this.state.From} disabled/><br/>\r\n                <Input value={this.state.detour} disabled/><br/>\r\n                <Input value={this.state.To} disabled/><br/>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"3\" >\r\n            <Card>\r\n              \r\n              <CardBody>\r\n                <Label >Tollgates</Label>\r\n                <hr/>\r\n                <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.From} - {this.state.detour}- {this.state.To}<Badge pill>{this.state.tollgates}</Badge></ListGroupItem>\r\n               \r\n                </ListGroup>\r\n              </CardBody>\r\n            </Card>\r\n            </Col>\r\n            <Col sm=\"6\" >\r\n            <Card>\r\n              <CardBody>\r\n                <Label >Tolling Cost</Label>\r\n                <hr/>\r\n                 <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">{this.state.VClass}</ListGroupItem>\r\n               \r\n                <ListGroupItem className=\"justify-content-between\"></ListGroupItem>\r\n                 <ListGroupItem className=\"justify-content-between\"><strong></strong></ListGroupItem>\r\n                </ListGroup>\r\n                <Table bordered>\r\n      <thead style={{ backgroundColor: 'transparent' }}>\r\n        <tr>\r\n          <th>Tollgates</th>\r\n          <th>USD</th>\r\n          <th>RTGS$</th>\r\n          <th>RAND</th>\r\n          <th>PULA</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{this.state.tollgates}</th>\r\n          <td>{this.state.usd * this.state.tollgates}</td>\r\n          <td>{this.state.rtgs * this.state.tollgates}</td>\r\n          <td>{this.state.rand * this.state.tollgates}</td>\r\n          <td>{this.state.pula * this.state.tollgates}</td>\r\n        </tr>\r\n       \r\n      </tbody>\r\n    </Table>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            </Col>\r\n          </Row>\r\n          \r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyASFEIozS-cq6MMSSPSR0_54A8j6l8PyE0'\r\n})(Tollgate);","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\CardItem.js",["54"],"C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Vehicle.js",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React from 'react';\r\nimport '../../App.css';\r\nimport Cards from '../Cards';\r\nimport HeroSection from '../HeroSection';\r\nimport Footer from '../Footer';\r\nimport { InputGroup, InputGroupText, InputGroupAddon, Input,Form, FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\r\nimport { Jumbotron, Button,Container,Row ,Col} from 'reactstrap';\r\nimport { ListGroup, ListGroupItem ,Badge,List } from 'reactstrap';\r\nimport { Box, FlatList, Center, NativeBaseProvider } from \"native-base\";\r\nimport { Table } from 'reactstrap';\r\nimport {CardLink\r\n} from 'reactstrap';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport MapContainer from './MapContainer';\r\n//import { FaMapMarkedAlt,FaMapSigns,FaMapMarked ,FaCar } from 'react-icons/fa';\r\nclass Vehicle extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n       this.state = {\r\n         errormessage: false,\r\n         error_message: \"\",\r\n        VRN: \"\",\r\n        VSTATE: [],\r\n       }\r\n  }\r\n   handleChange(event) {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val});\r\n  }\r\n\r\n   handleSubmit(event){\r\n      this.handleData();\r\n      event.preventDefault();\r\n   }\r\n    handleData() {\r\n      \r\nfetch(\"http://41.60.204.194:8082/api/reg/\" + this.state.VRN )\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n        console.log(result);\r\n         if(result.length > 0){\r\n            this.setState({\r\n              VSTATE: result\r\n            })            \r\n         }else{\r\n           alert(\"Vehicle Reg Number not Found!!\");\r\n           this.setState({\r\n              errormessage: true,\r\n              error_message: \"data not found\",\r\n\r\n           })\r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n    }\r\n\r\n\r\nkeyExtractor = (item, index) => index.toString()\r\n\r\nrenderItem = ({ item, index }) => (\r\n  <>\r\n  <div>\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Reg Number : {item.reg_no + \"\\n\"}  Chassis : ***{item.chassis.slice(-4)}</CardTitle>\r\n      </CardBody>\r\n      <CardBody>\r\n        <CardText></CardText>\r\n        \r\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Amount Owing :{ item.amount_owing}</CardSubtitle>\r\n        <CardSubtitle>Arrear : {item.arrear_amount}</CardSubtitle>\r\n\r\n         {item.non_registered == 0 && <FormGroup check inline>\r\n          <Label check>\r\n            <Input type=\"checkbox\" /> Registered\r\n          </Label>\r\n        </FormGroup>\r\n          }\r\n          {item.non_registered == 1 && <FormGroup check inline>\r\n          <Label check>\r\n            <Input type=\"checkbox\"/> Registered\r\n          </Label>\r\n        </FormGroup>\r\n          }\r\n         \r\n        <CardLink style={{ color: 'red' }} href=\"#\">Current Expiry Date :{item.current_licence_exp_date}</CardLink>\r\n      </CardBody>\r\n    </Card>\r\n  </div>\r\n   \r\n  </>\r\n)\r\n\r\n\r\n\r\n\r\n   render() {\r\n      return (\r\n        \r\n        <>\r\n        <NativeBaseProvider>\r\n        <hr style={{ marginTop: 10 , color: \"white\"}}/> \r\n       \r\n        <Container>\r\n        <Jumbotron fluid>\r\n        <Center flex={1}>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <Container>\r\n                <hr style={{ marginTop: 10 , color: \"#eec714\"}}/><Row><Col><InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>VRN</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  <Input name=\"VRN\" id=\"VRN\" value={this.state.VRN} onChange={this.handleChange} />\r\n                  </InputGroup></Col>\r\n                  <Col>\r\n                  <input className=\"btn btn-success btn-sm\" type=\"submit\" value=\"Cherk Status\" />\r\n                  </Col>\r\n                  </Row>\r\n                  \r\n                </Container>\r\n              </form>\r\n           </Center>\r\n        </Jumbotron>\r\n        <hr style={{ marginTop: 10 , color: \"#eec714\"}}/>\r\n        </Container>\r\n        \r\n\r\n        <div>\r\n\r\n        \r\n       <Center>\r\n          {this.state.VSTATE.length > 0 && <FlatList\r\n                data={this.state.VSTATE}\r\n                renderItem={this.renderItem}\r\n                keyExtractor={this.keyExtractor}\r\n              />\r\n          } </Center>\r\n        </div>\r\n       \r\n    </NativeBaseProvider>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Vehicle;","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\MapContainer.js",["72"],"import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport '../../App.css';\r\n\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '80%',\r\n};\r\nclass MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    Tollgates: [],\r\n      stores: [{lat: 17.2743, lng: 30.0416},\r\n              {latitude: 47.359423, longitude: -122.021071},\r\n              {latitude: 47.2052192687988, longitude: -121.988426208496},\r\n              {latitude: 47.6307081, longitude: -122.1434325},\r\n              {latitude: 47.3084488, longitude: -122.2140121},\r\n              {latitude: 47.5524695, longitude: -122.0425407}]\r\n    }\r\n  }\r\n  componentDidMount() {// Changing the state after 2 sec\r\n    // from the time when the component\r\n    // is rendered\r\n    setTimeout(() => {\r\n      this.setState({ color: 'white' });\r\n    }, 2000);\r\n    this.apiGetTollgates();\r\n  }\r\napiGetTollgates(){\r\n      fetch(\"http://41.60.204.194:8082/api/tollgates\")\r\n      .then(response => response.json())\r\n      .then((result) =>{\r\n        \r\n        console.log(result);\r\n         if(result.length > 0){\r\n           \r\n            this.setState({\r\n              Tollgates: result\r\n            })\r\n         }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n  displayMarkers = () => {\r\n    return this.state.Tollgates.map((toll, index) => {\r\n      return <Marker key={index} id={index} label={\"\"+ toll.name} position={{\r\n       lat: -toll.lat,\r\n       lng: toll.long\r\n     }}\r\n     onClick={() => console.log(\"You clicked me!\")} />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={8}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: -17.8277, lng: 31.0534}}\r\n        >\r\n          {this.displayMarkers()}\r\n        </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyASFEIozS-cq6MMSSPSR0_54A8j6l8PyE0'\r\n})(MapContainer);","C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Pages\\Home.js",["73"],"C:\\Users\\administrator.ZINARA\\Documents\\GitHub\\zinara_utilities\\src\\components\\Footer.js",["74"],{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":6,"column":61,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"75","severity":1,"message":"81","line":6,"column":85,"nodeType":"77","messageId":"78","endLine":6,"endColumn":97},{"ruleId":"75","severity":1,"message":"82","line":6,"column":99,"nodeType":"77","messageId":"78","endLine":6,"endColumn":107},{"ruleId":"75","severity":1,"message":"83","line":7,"column":21,"nodeType":"77","messageId":"78","endLine":7,"endColumn":27},{"ruleId":"75","severity":1,"message":"84","line":11,"column":9,"nodeType":"77","messageId":"78","endLine":11,"endColumn":16},{"ruleId":"75","severity":1,"message":"85","line":11,"column":18,"nodeType":"77","messageId":"78","endLine":11,"endColumn":26},{"ruleId":"75","severity":1,"message":"86","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":12,"endColumn":12},{"ruleId":"75","severity":1,"message":"87","line":12,"column":14,"nodeType":"77","messageId":"78","endLine":12,"endColumn":26},{"ruleId":"75","severity":1,"message":"88","line":14,"column":8,"nodeType":"77","messageId":"78","endLine":14,"endColumn":20},{"ruleId":"75","severity":1,"message":"89","line":195,"column":11,"nodeType":"77","messageId":"78","endLine":195,"endColumn":17},{"ruleId":"75","severity":1,"message":"90","line":196,"column":11,"nodeType":"77","messageId":"78","endLine":196,"endColumn":20},{"ruleId":"75","severity":1,"message":"91","line":203,"column":16,"nodeType":"77","messageId":"78","endLine":203,"endColumn":20},{"ruleId":"75","severity":1,"message":"90","line":207,"column":11,"nodeType":"77","messageId":"78","endLine":207,"endColumn":20},{"ruleId":"75","severity":1,"message":"92","line":212,"column":13,"nodeType":"77","messageId":"78","endLine":212,"endColumn":26},{"ruleId":"75","severity":1,"message":"93","line":214,"column":13,"nodeType":"77","messageId":"78","endLine":214,"endColumn":16},{"ruleId":"75","severity":1,"message":"94","line":215,"column":13,"nodeType":"77","messageId":"78","endLine":215,"endColumn":17},{"ruleId":"75","severity":1,"message":"95","line":216,"column":13,"nodeType":"77","messageId":"78","endLine":216,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":239,"column":20,"nodeType":"98","messageId":"99","endLine":239,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":244,"column":11,"nodeType":"102","messageId":"103","endLine":244,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":10,"column":13,"nodeType":"106","endLine":14,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"107","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":6,"column":61,"nodeType":"77","messageId":"78","endLine":6,"endColumn":65},{"ruleId":"75","severity":1,"message":"81","line":6,"column":85,"nodeType":"77","messageId":"78","endLine":6,"endColumn":97},{"ruleId":"75","severity":1,"message":"82","line":6,"column":99,"nodeType":"77","messageId":"78","endLine":6,"endColumn":107},{"ruleId":"75","severity":1,"message":"83","line":7,"column":21,"nodeType":"77","messageId":"78","endLine":7,"endColumn":27},{"ruleId":"75","severity":1,"message":"108","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":19},{"ruleId":"75","severity":1,"message":"109","line":8,"column":21,"nodeType":"77","messageId":"78","endLine":8,"endColumn":34},{"ruleId":"75","severity":1,"message":"110","line":8,"column":36,"nodeType":"77","messageId":"78","endLine":8,"endColumn":41},{"ruleId":"75","severity":1,"message":"111","line":8,"column":42,"nodeType":"77","messageId":"78","endLine":8,"endColumn":46},{"ruleId":"75","severity":1,"message":"112","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":13},{"ruleId":"75","severity":1,"message":"113","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"84","line":14,"column":9,"nodeType":"77","messageId":"78","endLine":14,"endColumn":16},{"ruleId":"75","severity":1,"message":"88","line":17,"column":8,"nodeType":"77","messageId":"78","endLine":17,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":79,"column":31,"nodeType":"98","messageId":"99","endLine":79,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":85,"column":32,"nodeType":"98","messageId":"99","endLine":85,"endColumn":34},{"ruleId":"75","severity":1,"message":"114","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},"no-unused-vars","'Cards' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Form' is defined but never used.","'FormFeedback' is defined but never used.","'FormText' is defined but never used.","'Button' is defined but never used.","'CardImg' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'MapContainer' is defined but never used.","'amount' is assigned a value but never used.","'tollgates' is assigned a value but never used.","'rtgs' is assigned a value but never used.","'vehicle_class' is assigned a value but never used.","'usd' is assigned a value but never used.","'pula' is assigned a value but never used.","'rand' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'HeroSection' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Badge' is defined but never used.","'List' is defined but never used.","'Box' is defined but never used.","'Table' is defined but never used.","'render' is defined but never used."]